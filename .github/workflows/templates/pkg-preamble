    needs: package

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: sdists-${{ needs.package.outputs.version }}
        path: dist/

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install Python wheel
      run: |
        pip install --upgrade pip wheel

    - name: Install OMUSE dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install libopenmpi-dev # gfortran libopenblas-dev libhdf5-openmpi-dev libgsl0-dev cmake libfftw3-3 libfftw3-dev libmpfr6 libmpfr-dev libnetcdf-dev libnetcdff-dev

    - name: Install OMUSE dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install openmpi
        echo "OMPI_FC=${FC}" >> $GITHUB_ENV
      env:
        FC: ${{ matrix.gfortran }}

    - name: Determine temp directory
      id: get_temp
      run: |
        echo "::set-output name=TMPDIR::${TMPDIR:-/tmp/}"

    - name: Compiler cache
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: PKG_NAME-${{ matrix.os }}-${{ matrix.gfortran }}
        max-size: 5000M

    - name: Point compilers at ccache
      run: |
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH
        echo "OMUSE_USE_CCACHE=1" >> $GITHUB_ENV
        echo "CMAKE_C_COMPILER_LAUNCHER=ccache" >> $GITHUB_ENV
        echo "CMAKE_CXX_COMPILER_LAUNCHER=ccache" >> $GITHUB_ENV
        echo "CMAKE_Fortran_COMPILER_LAUNCHER=ccache" >> $GITHUB_ENV
        echo "CCACHE_COMPILERCHECK=content" >> $GITHUB_ENV
        echo "CCACHE_NOHASHDIR=true" >> $GITHUB_ENV

